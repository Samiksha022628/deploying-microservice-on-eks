#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cdk = require("aws-cdk-lib");
const IamAndVpc_stack_1 = require("../lib/IamAndVpc-stack");
const EksCluster_stack_1 = require("../lib/EksCluster-stack");
const app = new cdk.App();
const targetStack = app.node.tryGetContext('stack');
const env = { account: '654654582602', region: 'us-east-1' };
if (targetStack === 'iam-vpc') {
    new IamAndVpc_stack_1.IamAndVpcStack(app, 'IamAndVpcStack', { env });
}
if (targetStack === 'eks-cluster') {
    new EksCluster_stack_1.EksClusterStack(app, 'EksClusterStack', { env });
}
/* If you don't specify 'env', this stack will be environment-agnostic.
 * Account/Region-dependent features and context lookups will not work,
 * but a single synthesized template can be deployed anywhere. */
/* Uncomment the next line to specialize this stack for the AWS Account
 * and Region that are implied by the current CLI configuration. */
// env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: process.env.CDK_DEFAULT_REGION },
/* Uncomment the next line if you know exactly what Account and Region you
 * want to deploy the stack to. */
/* For more information, see https://docs.aws.amazon.com/cdk/latest/guide/environments.html */ 
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwbG95aW5nLW1pY3Jvc2VydmljZS1vbi1la3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkZXBsb3lpbmctbWljcm9zZXJ2aWNlLW9uLWVrcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxtQ0FBbUM7QUFDbkMsNERBQXdEO0FBQ3hELDhEQUEwRDtBQUUxRCxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUMxQixNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNwRCxNQUFNLEdBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxDQUFDO0FBRTdELElBQUksV0FBVyxLQUFLLFNBQVMsRUFBRSxDQUFDO0lBQzlCLElBQUksZ0NBQWMsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0FBQUEsQ0FBQztBQUV0RCxJQUFJLFdBQVcsS0FBSyxhQUFhLEVBQUUsQ0FBQztJQUNsQyxJQUFJLGtDQUFlLENBQUMsR0FBRyxFQUFFLGlCQUFpQixFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztBQUFBLENBQUM7QUFDdEQ7O2lFQUVpRTtBQUVqRTttRUFDbUU7QUFDbkUsNkZBQTZGO0FBRTdGO2tDQUNrQztBQUVsQyw4RkFBOEYiLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG5pbXBvcnQgKiBhcyBjZGsgZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0IHsgSWFtQW5kVnBjU3RhY2sgfSBmcm9tICcuLi9saWIvSWFtQW5kVnBjLXN0YWNrJztcbmltcG9ydCB7IEVrc0NsdXN0ZXJTdGFjayB9IGZyb20gJy4uL2xpYi9Fa3NDbHVzdGVyLXN0YWNrJztcblxuY29uc3QgYXBwID0gbmV3IGNkay5BcHAoKTtcbmNvbnN0IHRhcmdldFN0YWNrID0gYXBwLm5vZGUudHJ5R2V0Q29udGV4dCgnc3RhY2snKTtcbmNvbnN0IGVudiA9IHsgYWNjb3VudDogJzY1NDY1NDU4MjYwMicsIHJlZ2lvbjogJ3VzLWVhc3QtMScgfTtcblxuaWYgKHRhcmdldFN0YWNrID09PSAnaWFtLXZwYycpIHtcbiAgbmV3IElhbUFuZFZwY1N0YWNrKGFwcCwgJ0lhbUFuZFZwY1N0YWNrJywgeyBlbnYgfSk7fVxuXG5pZiAodGFyZ2V0U3RhY2sgPT09ICdla3MtY2x1c3RlcicpIHtcbiAgbmV3IEVrc0NsdXN0ZXJTdGFjayhhcHAsICdFa3NDbHVzdGVyU3RhY2snLCB7IGVudiB9KTt9XG4gIC8qIElmIHlvdSBkb24ndCBzcGVjaWZ5ICdlbnYnLCB0aGlzIHN0YWNrIHdpbGwgYmUgZW52aXJvbm1lbnQtYWdub3N0aWMuXG4gICAqIEFjY291bnQvUmVnaW9uLWRlcGVuZGVudCBmZWF0dXJlcyBhbmQgY29udGV4dCBsb29rdXBzIHdpbGwgbm90IHdvcmssXG4gICAqIGJ1dCBhIHNpbmdsZSBzeW50aGVzaXplZCB0ZW1wbGF0ZSBjYW4gYmUgZGVwbG95ZWQgYW55d2hlcmUuICovXG5cbiAgLyogVW5jb21tZW50IHRoZSBuZXh0IGxpbmUgdG8gc3BlY2lhbGl6ZSB0aGlzIHN0YWNrIGZvciB0aGUgQVdTIEFjY291bnRcbiAgICogYW5kIFJlZ2lvbiB0aGF0IGFyZSBpbXBsaWVkIGJ5IHRoZSBjdXJyZW50IENMSSBjb25maWd1cmF0aW9uLiAqL1xuICAvLyBlbnY6IHsgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCwgcmVnaW9uOiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9SRUdJT04gfSxcblxuICAvKiBVbmNvbW1lbnQgdGhlIG5leHQgbGluZSBpZiB5b3Uga25vdyBleGFjdGx5IHdoYXQgQWNjb3VudCBhbmQgUmVnaW9uIHlvdVxuICAgKiB3YW50IHRvIGRlcGxveSB0aGUgc3RhY2sgdG8uICovXG5cbiAgLyogRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vY2RrL2xhdGVzdC9ndWlkZS9lbnZpcm9ubWVudHMuaHRtbCAqLyJdfQ==